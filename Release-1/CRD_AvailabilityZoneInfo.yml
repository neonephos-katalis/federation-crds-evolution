apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: availabilityzoneinfo.federation.com
spec:
  group: federation.com
  names:
    kind: AvailabilityZoneInfo
    plural: availabilityzoneinfo
    singular: availabilityzoneinfo
    shortNames:
    - ava-zone
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            required: [federationContextId]
            properties:
              federationContextId:
                type: string
                pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
                description: This identifier shall be provided by the partner OP on successful verification and validation of the federation create request and is used by partner op to identify this newly created federation context. Originating OP shall provide this identifier in any subsequent request towards the partner op.
              zoneId:
                type: string
                pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
                description: Human readable name of the zone.
              link:
                type: string
          status:
            type: object
            properties:
              reservedComputeResources:
                description: Resources exclusively reserved for the originator OP.
                type: array
                items:
                  type: object
                  required: [cpuArchType,numCPU,memory ]
                  properties:
                    cpuArchType:
                      type: string
                      enum: [ ISA_X86_64, ISA_ARM_64 ]
                      description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
                    numCPU:
                      type: string
                      pattern: ^\d+((\.\d{1,3})|(m))?$
                      description: Number of vcpus in whole, decimal up to millivcpu, or millivcpu format.
                      example:
                        whole:
                          value: 2
                        decimal:
                          value: 0.500
                        millivcpu:
                          value: 500m
                    memory:
                      type: integer
                      format: int64
                      description: Amount of RAM in Mbytes
                    diskStorage:
                      type: integer
                      format: int32
                      description: Amount of disk storage in Gbytes for a given ISA type
                    gpu:
                      type: array
                      items:
                        type: object
                        required: [ gpuVendorType, gpuModeName, gpuMemory, numGPU ]
                        properties:
                          gpuVendorType:
                            type: string
                            enum: [ GPU_PROVIDER_NVIDIA, GPU_PROVIDER_AMD ]
                            description: GPU vendor name e.g. NVIDIA, AMD etc.
                            example: Nvidia
                          gpuModeName:
                            type: string
                            description: Model name corresponding to vendorType may include info e.g. for NVIDIA, model name could be “Tesla M60”, “Tesla V100” etc.
                          gpuMemory:
                            type: integer
                            description: GPU memory in Mbytes
                          numGPU:
                            type: integer
                            description: Number of GPUs
                    vpu:
                      type: integer
                      description: Number of Intel VPUs available for a given ISA type
                    fpga:
                      type: integer
                      description: Number of FPGAs available for a given ISA type
                    hugepages:
                      type: array
                      items:
                        type: object
                        required: [ pageSize, number ]
                        properties:
                          pageSize:
                            type: string
                            enum: [ 2MB, 4MB, 1GB ]
                            description: Size of hugepage
                          number:
                            type: integer
                            description: Total number of huge pages
                    cpuExclusivity:
                      type: boolean
                      description: Support for exclusive CPUs
                minItems: 1
              computeResourceQuotaLimits:
                description: Max quota on resources partner OP allows over reserved resources.
                type: array
                items:
                  type: object
                  required: [ cpuArchType, numCPU, memory ]
                  properties:
                    cpuArchType:
                      type: string
                      enum: [ ISA_X86_64, ISA_ARM_64 ]
                      description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
                    numCPU:
                      type: string
                      pattern: ^\d+((\.\d{1,3})|(m))?$
                      description: Number of vcpus in whole, decimal up to millivcpu, or millivcpu format.
                      example:
                        whole:
                          value: 2
                        decimal:
                          value: 0.500
                        millivcpu:
                          value: 500m
                    memory:
                      type: integer
                      format: int64
                      description: Amount of RAM in Mbytes
                    diskStorage:
                      type: integer
                      format: int32
                      description: Amount of disk storage in Gbytes for a given ISA type
                    gpu:
                      type: array
                      items:
                        type: object
                        required: [ gpuVendorType, gpuModeName, gpuMemory, numGPU ]
                        properties:
                          gpuVendorType:
                            type: string
                            enum: [ GPU_PROVIDER_NVIDIA, GPU_PROVIDER_AMD ]
                            description: GPU vendor name e.g. NVIDIA, AMD etc.
                            example: Nvidia
                          gpuModeName:
                            type: string
                            description: Model name corresponding to vendorType may include info e.g. for NVIDIA, model name could be “Tesla M60”, “Tesla V100” etc.
                          gpuMemory:
                            type: integer
                            description: GPU memory in Mbytes
                          numGPU:
                            type: integer
                            description: Number of GPUs
                    vpu:
                      type: integer
                      description: Number of Intel VPUs available for a given ISA type
                    fpga:
                      type: integer
                      description: Number of FPGAs available for a given ISA type
                    hugepages:
                      type: array
                      items:
                        type: object
                        required: [ pageSize, number ]
                        properties:
                          pageSize:
                            type: string
                            enum: [ 2MB, 4MB, 1GB ]
                            description: Size of hugepage
                          number:
                            type: integer
                            description: Total number of huge pages
                    cpuExclusivity:
                      type: boolean
                      description: Support for exclusive CPUs
                minItems: 1
              flavoursSupported:
                type: array
                items:
                  type: object
                  required: [ flavourId, cpuArchType, supportedOSTypes, numCPU, memorySize, storageSize ]
                  properties:
                    flavourId:
                      type: string
                      description: An identifier to refer to a specific combination of compute resources
                    cpuArchType:
                      type: string
                      enum: [ ISA_X86, ISA_X86_64, ISA_ARM_64 ]
                      description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
                    supportedOSTypes:
                      description: A list of operating systems which this flavour configuration can support e.g., RHEL Linux, Ubuntu 18.04 LTS, MS Windows 2012 R2.
                      type: array
                      items:
                        type: object
                        required: [ architecture, distribution, version, license ]
                        properties:
                          architecture:
                            type: string
                            enum: [ x86_64, x86, x86_64 ]
                          distribution:
                            type: string
                            enum: [ RHEL, UBUNTU, COREOS, FEDORA, WINDOWS, OTHER ]
                          version:
                            type: string
                            enum: [OS_VERSION_UBUNTU_2204_LTS, OS_VERSION_RHEL_8, OS_VERSION_RHEL_7, OS_VERSION_DEBIAN_11, OS_VERSION_COREOS_STABLE, OS_MS_WINDOWS_2012_R2, OTHER]
                          license:
                            type: string
                            enum: [OS_LICENSE_TYPE_FREE, OS_LICENSE_TYPE_ON_DEMAND, NOT_SPECIFIED]
                      minItems: 1
                    numCPU:
                      type: integer
                      format: int32
                      description: Number of available vCPUs
                    memorySize:
                      type: integer
                      format: int32
                      description: Amount of RAM in Mbytes
                    storageSize:
                      type: integer
                      format: int32
                      description: Amount of disk storage in Gbytes
                    gpu:
                      type: array
                      items:
                        type: object
                        required: [ gpuVendorType, gpuModeName, gpuMemory, numGPU ]
                        properties:
                          gpuVendorType:
                            type: string
                            enum: [ GPU_PROVIDER_NVIDIA, GPU_PROVIDER_AMD ]
                            description: GPU vendor name e.g. NVIDIA, AMD etc.
                            example: Nvidia
                          gpuModeName:
                            type: string
                            description: Model name corresponding to vendorType may include info e.g. for NVIDIA, model name could be “Tesla M60”, “Tesla V100” etc.
                          gpuMemory:
                            type: integer
                            description: GPU memory in Mbytes
                          numGPU:
                            type: integer
                            description: Number of GPUs
                    fpga:
                      type: integer
                      format: int32
                      description: Number of FPGAs
                    vpu:
                      type: integer
                      description: Number of Intel VPUs available
                    hugepages:
                      type: array
                      items:
                        type: object
                        required: [ pageSize, number ]
                        properties:
                          pageSize:
                            type: string
                            enum: [ 2MB, 4MB, 1GB ]
                            description: Size of hugepage
                          number:
                            type: integer
                            description: Total number of huge pages
                    cpuExclusivity:
                      type: boolean
                      description: Support for exclusive CPUs
                minItems: 1
              networkResources:
                type: object
                required: [egressBandWidth, dedicatedNIC, supportSriov, supportDPDK ]
                properties:
                  egressBandWidth:
                    type: integer
                    format: int32
                    description: Max dl throughput that this edge can offer. It is defined in Mbps.
                  dedicatedNIC:
                    type: integer
                    format: int32
                    description: Number of network interface cards which can be dedicatedly assigned to application pods on isolated networks. This includes virtual as well physical NICs
                  supportSriov:
                    type: boolean
                    description: If this zone support SRIOV networks or not
                  supportDPDK:
                    type: boolean
                    description: If this zone supports DPDK based networking.
              zoneServiceLevelObjsInfo:
                type: object
                description: It is a measure of the actual amount of data that is being sent over a network per unit of time and indicates máximum supported value for a zone
                required: [ latencyRanges, jitterRanges, throughputRanges ]
                properties:
                  latencyRanges:
                    type: object
                    properties:
                      minLatency:
                        type: integer
                        format: int32
                        minimum: 1
                        description: The time for data/packet to reach from UC to edge application. It represent mínimum latency in milli seconds that may exist between UCs and edge apps in this zone but it can be higher in actual.
                      maxLatency:
                        type: integer
                        format: int32
                        description: The maximum limit of latency between UC and Edge App in milli seconds.
                  jitterRanges:
                    type: object
                    properties:
                      minJitter:
                        type: integer
                        format: int32
                        minimum: 1
                      maxJitter:
                        type: integer
                        format: int32
                        description: The maximum limit of network jitter between UC and Edge App in milli seconds.
                  throughputRanges:
                    type: object
                    properties:
                      minThroughput:
                        type: integer
                        format: int32
                        minimum: 1
                        description: The minimum limit of network throughput between UC and Edge App in Mega bits per seconds (Mbps).
                      maxThroughput:
                        type: integer
                        format: int32
                        description: The maximum limit of network throughput between UC and Edge App in Mega bits per seconds (Mbps).
