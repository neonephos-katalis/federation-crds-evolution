# API REST:
# - POST /{federationContextId}/files
#     Uploads an image file. Originating OP uses this api to onboard an application image to partner OP.
# - GET /{federationContextId}/files/{fileId}
#     View an image file from partner OP.
# - DELETE /{federationContextId}/files/{fileId}
#     Removes an image file from partner OP.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: imagesmanagement.federation.com
spec:
  group: federation.com
  names:
    plural: imagesmanagement
    singular: imagemanagement
    kind: ImageManagement
    shortNames:
      - image-man
  scope: Namespaced
  versions:
    - name: v1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required: [federationContextId,imageId]
              properties:
                federationContextId:
                    type: string
                    pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
                    description: This identifier shall be provided by the partner OP on successful verification and validation of the federation create request and is used by partner op to identify this newly created federation context. Originating OP shall provide this identifier in any subsequent request towards the partner op.                
                imageId:
                  type: string
                  format: uuid
                  description: A globally unique identifier associated with the image. Originating OP generates this identifier when image is uploaded over NBI.
                imageBody:
                  type: object
                  required: [appProviderId,imageName,imageVersionInfo,imageType,imgOSType,imgInsSetArch]
                  properties:
                    appProviderId:
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
                      description: UserId of the app provider.  Identifier is relevant only in context of this federation.
                    imageName:
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                      description: Name of the image.   App provides specifies this name when image is uploaded on originating OP over NBI.
                    imageDescription:
                      type: string
                      minLength: 8
                      maxLength: 128
                      description: Brief description about the image.
                    imageVersionInfo:
                      type: string
                      description: Image version information.
                    imageType:
                      type: string
                      enum: [QCOW2,DOCKER,OVA]
                      description: Indicate if the image is Container image or VM image (QCOW2, OVA)
                    checksum:
                      type: string
                      description: MD5 checksum for VM and image-based images, sha256 digest for containers
                    imgOSType:
                      type: object
                      required: [architecture,distribution,version,license]
                      properties:
                        architecture:
                          type: string
                          enum: [x86_64,x86]
                        distribution:
                          type: string
                          enum: [RHEL,UBUNTU,COREOS,FEDORA,WINDOWS,OTHER]
                        version:
                          type: string
                          enum: [OS_VERSION_UBUNTU_2204_LTS,OS_VERSION_RHEL_8,OS_VERSION_RHEL_7,OS_VERSION_DEBIAN_11,OS_VERSION_COREOS_STABLE,OS_MS_WINDOWS_2012_R2,OTHER]
                        license:
                          type: string
                          enum: [OS_LICENSE_TYPE_FREE,OS_LICENSE_TYPE_ON_DEMAND,NOT_SPECIFIED]
                    imgInsSetArch:
                      type: string
                      enum: [ISA_X86_64,ISA_ARM_64]
                      description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
                    repoType:
                      type: string
                      enum: [PRIVATEREPO,PUBLICREPO,UPLOAD]
                      description: Image repository location. PUBLICREPO is used of public URLs like GitHub, Helm repo, docker registry etc., PRIVATEREPO is used for private repo managed by the application developer, UPLOAD is for the case when image is uploaded from MEC web portal.  OP should pull the image from â€˜repoUrl' immediately after receiving the request and then send back the response. In case the repoURL corresponds to a docker registry, use docker v2 http api to do the pull.
                    imageRepoLocation:
                      type: array
                      items:
                        type: object
                        properties:
                          repoURL:
                            type: string
                          userName:
                            type: string
                            description: Username to access the repository
                          password:
                            type: string
                            description: Password to access the repository
                          token:
                            type: string
                            description: Authorization token to access the repository
                    image:
                      type: string
                      format: byte
            status:
              type: object
              properties:
                state:
                  type: string
                  description: Current state of the artefact upload
                  enum: [Pending,Uploading,Uploaded,Failed]
                message:
                  type: string
                  description: message indicating details about the current state
                lastUpdated:
                  type: string
                  format: date-time
                  description: Timestamp of the last status update
